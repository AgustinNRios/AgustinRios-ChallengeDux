import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Image from "next/image";
import "./globals.css";
import styles from "./layout.module.css";

// Theme
import "primereact/resources/themes/lara-light-indigo/theme.css";
// Core CSS
import "primereact/resources/primereact.min.css";
// Icons
import "primeicons/primeicons.css";
import Link from "next/link";
import { ClientOnly } from "@/components/ui/clientOnly/ClientOnly";
import { LoadingSkeleton } from "@/components/ui/loadingSkeleton/LoadingSkeleton";
// PrimeFlex
// import "primeflex/primeflex.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${styles.body} ${geistSans.variable} ${geistMono.variable}`}
      >
        <header className={styles.header}>
          <ClientOnly fallback={<div className={styles.logoFallback}></div>}>
            <Image src="/logo.png" alt="Logo" width={44} height={43} priority />
          </ClientOnly>
          <Link href="/" className={styles.headerLink}>
            <i className="pi pi-cog"></i>
          </Link>
        </header>
        <div className={styles.contentWrapper}>
          <nav className={styles.sidebar}>
            <ul className={styles.menuList}>
              {[1, 2, 3, 4, 5, 6].map((item) => (
                <li key={item}>
                  <ClientOnly fallback={<div className={styles.menuItemFallback}></div>}>
                    <Image 
                      className={styles.menuItem}
                      src="/box.svg" 
                      alt={`Menu item ${item}`} 
                      width={25} 
                      height={25}
                      priority={item <= 2}
                    />
                  </ClientOnly>
                </li>
              ))}
            </ul>
          </nav>
          <main className={styles.main}>
            <ClientOnly fallback={<LoadingSkeleton />}>
              {children}
            </ClientOnly>
          </main>
        </div>
      </body>
    </html>
  );
}
