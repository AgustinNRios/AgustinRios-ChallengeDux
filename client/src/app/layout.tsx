import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Image from "next/image";
import "./globals.css";

// Theme
import "primereact/resources/themes/lara-light-indigo/theme.css";
// Core CSS
import "primereact/resources/primereact.min.css";
// Icons
import "primeicons/primeicons.css";
import Link from "next/link";
import { ClientOnly } from "@/components/ui/clientOnly/ClientOnly";
import { LoadingSkeleton } from "@/components/ui/loadingSkeleton/LoadingSkeleton";
// PrimeFlex
// import "primeflex/primeflex.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`h-[100vh] ${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <header className="flex justify-between items-center bg-[#0763E7] h-[45px] px-4">
          <ClientOnly fallback={<div className="w-[44px] h-[43px] bg-white/20 rounded"></div>}>
            <Image src="/logo.png" alt="Logo" width={44} height={43} priority />
          </ClientOnly>
          <Link href="/" className="text-white text-xl">
            <i className="pi pi-cog"></i>
          </Link>
        </header>
        <div className="flex min-h-[calc(100%-45px)]">
          <nav className="flex bg-gray-500 w-[65px] min-h-full">
            <ul className="w-full">
              {[1, 2, 3, 4, 5, 6].map((item) => (
                <li key={item}>
                  <ClientOnly fallback={<div className="w-[25px] h-[25px] bg-white/20 rounded mt-5 mx-auto"></div>}>
                    <Image 
                      className="mt-5 mx-auto" 
                      src="/box.svg" 
                      alt={`Menu item ${item}`} 
                      width={25} 
                      height={25}
                      priority={item <= 2}
                    />
                  </ClientOnly>
                </li>
              ))}
            </ul>
          </nav>
          <main className="w-full min-h-full">
            <ClientOnly fallback={<LoadingSkeleton />}>
              {children}
            </ClientOnly>
          </main>
        </div>
      </body>
    </html>
  );
}
